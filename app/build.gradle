plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id 'com.google.devtools.ksp'
    id "com.mikepenz.aboutlibraries.plugin" version "11.1.3"
}

apply plugin: 'com.mikepenz.aboutlibraries.plugin'

String getGoogleApiKey() {
    def propFile = rootProject.file("./local.properties")
    def properties = new Properties()
    if (propFile.exists()) {
        properties.load(new FileInputStream(propFile))
        return properties.getProperty('GOOGLE_API_KEY', "null")
    } else {
        return "null"
    }
}

android {
    namespace 'com.starry.myne'
    compileSdk 34

    defaultConfig {
        applicationId "com.starry.myne"
        minSdk 26
        targetSdk 34
        versionCode 351
        versionName "3.5.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        ksp {
            arg('room.schemaLocation', "$projectDir/schemas")
        }

        buildConfigField("String", "GOOGLE_API_KEY", getGoogleApiKey())
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // Rename the output apk file automatically.
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def name = "Myne-v${variant.versionName}.apk"
                    output.outputFileName = name
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    lintOptions {
        abortOnError false
    }
    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs = ['-Xjvm-default=all-compatibility']
    }
    buildFeatures {
        compose true
        buildConfig = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.10'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

aboutLibraries {
    // Remove the "generated" timestamp to allow for reproducible builds
    excludeFields = ["generated"]
}


dependencies {
    def composeBom = platform('androidx.compose:compose-bom:2024.04.01')
    implementation composeBom
    androidTestImplementation composeBom

    // Android core components.
    implementation 'androidx.core:core-ktx:1.13.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    implementation 'androidx.activity:activity-compose:1.9.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.7.0"
    implementation "androidx.navigation:navigation-compose:2.7.7"
    // Jetpack compose.
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.ui:ui-tooling-preview"
    implementation "androidx.compose.material:material"
    implementation "androidx.compose.animation:animation"
    implementation "androidx.compose.runtime:runtime-livedata"
    implementation "androidx.compose.material3:material3"
    // Accompanist compose.
    implementation "com.google.accompanist:accompanist-systemuicontroller:0.28.0"
    // Material icons.
    implementation 'androidx.compose.material:material-icons-extended:1.6.6'
    // Material theme for main activity.
    implementation 'com.google.android.material:material:1.11.0'
    // Android 12+ splash API.
    implementation 'androidx.core:core-splashscreen:1.0.1'
    // Gson JSON library.
    implementation 'com.google.code.gson:gson:2.10.1'
    // OkHttp library.
    implementation "com.squareup.okhttp3:okhttp:4.11.0"
    // Coil Image loading library.
    implementation "io.coil-kt:coil-compose:2.4.0"
    // Room database components.
    implementation "androidx.room:room-ktx:$room_version"
    ksp "androidx.room:room-compiler:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"
    // Dagger - Hilt.
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation "androidx.hilt:hilt-navigation-compose:1.2.0"
    ksp "com.google.dagger:hilt-android-compiler:$hilt_version"
    ksp "androidx.hilt:hilt-compiler:1.2.0"
    // Jsoup HTML Parser.
    implementation "org.jsoup:jsoup:1.17.2"
    // Lottie animations.
    implementation "com.airbnb.android:lottie-compose:6.4.0"
    // DataStore Preferences.
    implementation("androidx.datastore:datastore-preferences:1.1.0")
    // Open Source Libraries Screen.
    implementation "com.mikepenz:aboutlibraries-core:11.1.3"
    implementation "com.mikepenz:aboutlibraries-compose:11.1.3"
    // Swipe actions.
    implementation "me.saket.swipe:swipe:1.2.0"
    // Crash Handler.
    implementation 'cat.ereza:customactivityoncrash:2.4.0'
    // Kotlin reflect API.
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.9.22"
    // Testing components.
    testImplementation 'junit:junit:4.13.2'
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'org.mockito:mockito-core:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    // Android testing components.
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4"
    // debug components.
    debugImplementation "androidx.compose.ui:ui-tooling"
    debugImplementation "androidx.compose.ui:ui-test-manifest"
}
